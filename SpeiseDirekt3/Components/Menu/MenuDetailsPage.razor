@page "/menu/details/{id}"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.EntityFrameworkCore
@using SpeiseDirekt3.Model
@using SpeiseDirekt3.ServiceInterface
@inject ApplicationDbContext DbContext
@inject INotificationService NotificationService
@inject NavigationManager NavManager
@attribute [Authorize]

<div class="container mt-5">
    <h3>Menu Details</h3>

    @if (menu == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <table class="table table-bordered">
            <tbody>
                <tr>
                    <th>Name</th>
                    <td>@menu.Name</td>
                </tr>
                <tr>
                    <th>Description</th>
                    <td>@menu.Description</td>
                </tr>
                <tr>
                    <th>Theme</th>
                    <td>@menu.Theme</td>
                </tr>
            </tbody>
        </table>

        <!-- Card for Menu Items -->
        <div class="card border-0 bg-light mb-4">
            <div class="card-body d-flex justify-content-between align-items-center">
                <div>
                    <h5 class="card-title mb-0">🍽️ Manage Menu Items</h5>
                    <small class="text-muted">Go to the menu items for <strong>@menu?.Name</strong>.</small>
                </div>
                <a class="btn btn-outline-primary" href="@($"/menuitems/{menu.Id}")">
                    ➡️ View Menu Items
                </a>
            </div>
        </div>

        <!-- Card for Categories -->
        <div class="card border-0 bg-light mb-4">
            <div class="card-body d-flex justify-content-between align-items-center">
                <div>
                    <h5 class="card-title mb-0">📂 Manage Categories</h5>
                    <small class="text-muted">Go to the categories for <strong>@menu?.Name</strong>.</small>
                </div>
                <a class="btn btn-outline-primary" href="@($"categories/{menu?.Id}")">
                    ➡️ View Categories
                </a>
            </div>
        </div>

        <h5>Actions</h5>
        <div class="mb-3">
            <button class="btn btn-sm btn-primary me-2" @onclick="() => EditMenu(menu.Id)">Edit</button>
            <button class="btn btn-sm btn-danger" @onclick="() => DeleteMenu(menu.Id)">Delete</button>
        </div>
    }
</div>

@code {
    [Parameter]
    public string Id { get; set; }

    private Menu? menu;

    protected override async Task OnInitializedAsync()
    {
        if (!Guid.TryParse(Id, out var idGuid))
            NavManager.NavigateTo("/menus");

        menu = await DbContext.Menus
            .FirstOrDefaultAsync(m => m.Id == idGuid);

        if (menu == null)
        {
            NavManager.NavigateTo("/menus");
        }
    }

    private void EditMenu(Guid menuId)
    {
        // Navigate to the menu edit page
        NavManager.NavigateTo($"/menu/edit/{menuId}");
    }

    private async Task DeleteMenu(Guid menuId)
    {
        var menu = await DbContext.Menus.FindAsync(menuId);
        if (menu != null)
        {
            var confirm = await NotificationService
                .ShowConfirmation(("Delete", $"Are you sure you want to delete the menu \"{menu.Name}\"?"));

            if (confirm)
            {
                DbContext.QRCodes.RemoveRange(DbContext.QRCodes.Where(e => e.MenuId == menu.Id).ToList());
                DbContext.Menus.Remove(menu);
                await DbContext.SaveChangesAsync();

                // After deletion, navigate to the menus overview
                NavManager.NavigateTo("/menus");
            }
        }
    }
}
