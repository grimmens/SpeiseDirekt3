@page "/menus"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.EntityFrameworkCore
@using SpeiseDirekt3.Model
@using SpeiseDirekt3.ServiceInterface
@inject ApplicationDbContext DbContext
@inject INotificationService NotificationService
@inject NavigationManager NavManager
@attribute [Authorize]

<div class="container mt-5">
    <h3>Available Menus</h3>

    <button class="btn btn-success mb-3" @onclick="CreateNewMenu">Add Menu</button>

    @if (menus == null)
    {
        <p><em>Loading...</em></p>
    }
    else if (!menus.Any())
    {
        <p>No menus available.</p>
    }
    else
    {
        <table class="table table-bordered table-striped">
            <thead class="thead-dark">
                <tr>
                    <th>Name</th>
                    <th>Description</th>
                    <th>Theme</th>
                    <th>Extras</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var menu in menus)
                {
                    <tr>
                        <td>
                            <a href="@($"/menu/details/{menu.Id}")">@menu.Name</a>
                        </td>
                        <td>@menu.Description</td>
                        <td>@menu.Theme</td>
                        <td>
                            <a class="btn btn-sm btn-outline-primary" href="@($"menuitems/{menu.Id}")">Menu Items</a>
                            <a class="btn btn-sm btn-outline-primary" href="@($"categories/{menu?.Id}")">Categories</a>
                        </td>
                        <td>
                            <button class="btn btn-sm btn-primary me-2" @onclick="() => EditMenu(menu.Id)">Edit</button>
                            <button class="btn btn-sm btn-danger" @onclick="() => DeleteMenu(menu.Id)">Delete</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>

@code {
    private List<Menu> menus;

    protected override async Task OnInitializedAsync()
    {
        menus = await DbContext.Menus.ToListAsync();
    }

    private void CreateNewMenu()
    {
        // Navigate to the "Add" page (no Id)
        NavManager.NavigateTo("/menu/edit");
    }

    private void EditMenu(Guid menuId)
    {
        // Navigate to the "Edit" page for this menu
        NavManager.NavigateTo($"/menu/edit/{menuId}");
    }

    private async Task DeleteMenu(Guid menuId)
    {
        var menu = await DbContext.Menus.FindAsync(menuId);
        if (menu != null)
        {
            var confirm = await NotificationService
                .ShowConfirmation(("Delete", $"Delete \"{menu.Name}\"?"));

            if (confirm)
            {
                DbContext.QRCodes.RemoveRange(DbContext.QRCodes.Where(e => e.MenuId == menu.Id).ToList());
                DbContext.Menus.Remove(menu);
                await DbContext.SaveChangesAsync();

                // Remove from local list to update UI instantly
                menus.Remove(menu);
                StateHasChanged();
            }
        }
    }
}
