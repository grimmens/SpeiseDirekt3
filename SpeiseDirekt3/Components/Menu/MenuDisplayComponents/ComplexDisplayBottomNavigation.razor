<!-- Bottom Navigation -->
<div class="fixed left-0 bottom-0 w-full bg-transparent">
    <div class="mx-auto max-w-screen-lg bg-white border-t border-gray-200 px-6 py-3 shadow-lg">
        <div class="flex items-center justify-between">
            <button @onclick="ToggleLanguageMenu" class="flex items-center gap-2 text-gray-600 hover:text-gray-800 transition-colors">
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9v-3a9 9 0 009-9 9 9 0 00-9 9v3z"></path>
                </svg>
                <span class="text-sm font-medium">Sprache</span>
            </button>
            <button class="flex items-center gap-2 text-gray-600 hover:text-gray-800 transition-colors">
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.293A1 1 0 013 6.586V4z"></path>
                </svg>
                <span class="text-sm font-medium">Filter</span>
            </button>
            <button class="p-2 text-gray-600 hover:text-gray-800 transition-colors">
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z"></path>
                </svg>
            </button>
            <button class="p-2 text-gray-600 hover:text-gray-800 transition-colors">
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z"></path>
                </svg>
            </button>
            <!-- Filter Button (last) -->
            <button @onclick="() => showFilterModal = true" class="p-2 text-gray-600 hover:text-gray-800 transition-colors">
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                          d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                </svg>
            </button>
        </div>
    </div>
</div>

<!-- Language Selection Modal -->
@if (showLanguageMenu)
{
    <div class="fixed inset-0 bg-black/60 z-50 flex items-center justify-center">
        <div class="bg-white p-4 rounded-lg shadow-lg w-96">
            <h2 class="text-lg font-semibold mb-2">Select Language</h2>

            <!-- Search input -->
            <input type="text"
                   class="w-full border px-3 py-2 mb-3 rounded"
                   placeholder="Search..."
                   @bind="languageSearch" />

            <!-- Filtered language list -->
            <ul>
                @foreach (var lang in FilteredLanguages)
                {
                    <li class="mb-2">
                        <button class="w-full flex items-center gap-2 text-left px-2 py-1 bg-gray-200 hover:bg-gray-300 rounded"
                                @onclick="() => SelectLanguage(lang.Name)">
                            <span>@lang.Name</span>
                        </button>
                    </li>
                }
            </ul>

            <!-- Close button -->
            <button class="mt-4 text-sm text-black-500 hover:text-black-800 bg-blue-200 p-2 rounded hover:bg-blue-300"
                    @onclick="() => showLanguageMenu = false">
                Close
            </button>
        </div>
    </div>
}
@if (showFilterModal)
{
    <div class="fixed inset-0 bg-black/60 z-50 flex items-center justify-center">
        <div class="bg-white w-full max-w-screen-md max-h-[90vh] overflow-y-auto rounded-lg shadow-lg p-4">
            <SearchForMenuItemsComp Menu="Menu" OnItemSelected="HandleMenuItemSelected" />
            <div class="flex justify-end mt-4">
                <button class="text-sm text-gray-500 hover:text-gray-800 px-4 py-2 rounded border"
                        @onclick="() => showFilterModal = false">
                    Close
                </button>
            </div>
        </div>
    </div>
}



@code {
    [Parameter] public EventCallback<string> OnLanguageSelected { get; set; }
    [Parameter] public EventCallback<string> OnFilterApplied { get; set; }
    [Parameter] public Menu? Menu { get; set; } // ← The menu to search in
    [Parameter] public EventCallback<MenuItem> OnMenuItemSelected { get; set; }
    private bool showLanguageMenu = false;
    private string languageSearch = "";

    private void ToggleLanguageMenu() => showLanguageMenu = !showLanguageMenu;

    private async Task SelectLanguage(string language)
    {
        showLanguageMenu = false;
        await OnLanguageSelected.InvokeAsync(language);
    }

    private List<LanguageOption> languages = new()
    {
        new("English", "🇬🇧"),
        new("German", "🇩🇪"),
        new("French", "🇫🇷"),
        new("Spanish", "🇪🇸"),
        new("Italian", "🇮🇹"),
        new("Turkish", "🇹🇷"),
        new("Arabic", "🇸🇦"),
    };

    private IEnumerable<LanguageOption> FilteredLanguages =>
        languages.Where(l => l.Name.Contains(languageSearch, StringComparison.OrdinalIgnoreCase));

    private class LanguageOption
    {
        public string Name { get; }
        public string Flag { get; }

        public LanguageOption(string name, string flag)
        {
            Name = name;
            Flag = flag;
        }
    }

    

    private async Task HandleMenuItemSelected(MenuItem item)
    {
        showFilterModal = false;
        await OnMenuItemSelected.InvokeAsync(item);
    }

    private bool showFilterModal = false;
}