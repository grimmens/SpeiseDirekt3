@page "/MenuItems"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.EntityFrameworkCore
@using SpeiseDirekt3.Data
@using SpeiseDirekt3.Model
@using SpeiseDirekt3.Infrastructure
@using SpeiseDirekt3.ServiceInterface
@attribute [Authorize]

<PageTitle>Menu Items</PageTitle>

<div class="container mt-5">
    <h1 class="mb-4 text-primary">🍽️ Menu Items by Category</h1>

    @if (Categories.Any())
    {
        <ul class="nav nav-tabs mb-3">
            @foreach (var cat in Categories)
            {
                <li class="nav-item">
                    <a class="nav-link @(cat.Id == SelectedCategoryId ? "active" : "")"
                    @onclick="() => SelectCategory(cat.Id)">
                        @cat.Name
                    </a>
                </li>
            }
        </ul>

        <div>
            @if (SelectedCategory != null)
            {
                <MenuItemTable Category="SelectedCategory"
                Categories="Categories"
                />
            }
        </div>
    }
    else
    {
        <p class="text-muted">No categories available. Please add some first.</p>
    }
</div>

@code {
    [Inject] public ApplicationDbContext Context { get; set; }
    [Inject] public INotificationService NotificationService { get; set; }

    List<Category> Categories { get; set; } = [];

    Guid SelectedCategoryId { get; set; }
    Category? SelectedCategory { get; set; }

    MenuItem Input { get; set; } = new();
    EditContext editContext = new(new MenuItem());
    EditForm editForm;

    MenuItemEditor menuItemEditor;

    protected override async Task OnInitializedAsync()
    {
        await LoadCategoriesAsync();
        if (Categories.Any())
        {
            SelectedCategoryId = Categories.First().Id;
            SelectedCategory = Categories.FirstOrDefault(c => c.Id == SelectedCategoryId);

        }
    }

    async Task LoadCategoriesAsync()
    {
        Categories = await Context.Categories.OrderBy(c => c.Name).ToListAsync();
        SelectedCategory = Categories.FirstOrDefault(c => c.Id == SelectedCategoryId);
    }

    void SelectCategory(Guid categoryId)
    {
        SelectedCategoryId = categoryId;
        SelectedCategory = Categories.FirstOrDefault(c => c.Id == SelectedCategoryId);
        Input = new MenuItem { CategoryId = categoryId };
        editContext = new EditContext(Input);
        StateHasChanged(); // Ensure the UI updates
    }

}
