<!-- Shared/Modal.razor -->
<div class="fixed inset-0 z-[9999] flex items-center justify-center bg-black bg-opacity-50" @onclick="OnBackdropClick">
    <div class="bg-white rounded-xl shadow-lg max-w-3xl w-full mx-4 relative" @onclick:stopPropagation>
        @ChildContent
    </div>
</div>

@code {
    [Parameter] public RenderFragment? ChildContent { get; set; }
    [Parameter] public EventCallback OnClose { get; set; }

    private async Task OnBackdropClick()
    {
        await OnClose.InvokeAsync();
    }

    protected override void OnInitialized()
    {
        _ = JS.InvokeVoidAsync("addEventListener", "keydown", DotNetObjectReference.Create(this));
    }

    [Inject] IJSRuntime JS { get; set; } = default!;

    [JSInvokable]
    public async Task HandleKeyDown(KeyboardEventArgs e)
    {
        if (e.Key == "Escape")
        {
            await OnClose.InvokeAsync();
        }
    }

    public void Dispose()
    {
        _ = JS.InvokeVoidAsync("removeEventListener", "keydown", DotNetObjectReference.Create(this));
    }
}
